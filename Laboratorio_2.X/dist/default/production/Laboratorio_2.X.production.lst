

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 00:18:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284                           
   285                           	psect	idataCOMMON
   286  00C4                     __pidataCOMMON:	
   287                           
   288                           ;initializer for _MenSig
   289  00C4  340F               	retlw	15
   290  001F                     _ADCON0	set	31
   291  000B                     _INTCON	set	11
   292  0005                     _PORTAbits	set	5
   293  0008                     _PORTD	set	8
   294  0001                     _TMR0	set	1
   295  001E                     _ADRESH	set	30
   296  001F                     _ADCON0bits	set	31
   297  000C                     _PIR1bits	set	12
   298  0006                     _PORTBbits	set	6
   299  000B                     _INTCONbits	set	11
   300  008C                     _PIE1	set	140
   301  009F                     _ADCON1	set	159
   302  0081                     _OPTION_REG	set	129
   303  0096                     _IOCB	set	150
   304  008F                     _OSCCON	set	143
   305  0089                     _TRISE	set	137
   306  0088                     _TRISD	set	136
   307  0087                     _TRISC	set	135
   308  0086                     _TRISB	set	134
   309  0085                     _TRISA	set	133
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSEL	set	392
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  000F                     start_initialization:	
   317  000F                     __initialization:	
   318                           
   319                           ; Initialize objects allocated to COMMON
   320  000F  120A  118A  20C4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   321  0014  00FC               	movwf	__pdataCOMMON& (0+127)
   322                           
   323                           ; Clear objects allocated to COMMON
   324  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   325  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   326  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   327  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   328  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   329  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   330  001B                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  001B                     __end_of__initialization:	
   334  001B  0183               	clrf	3
   335  001C  120A  118A  287B   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0070                     __pbssCOMMON:	
   339  0070                     _ADC_val_D:	
   340  0070                     	ds	1
   341  0071                     _ADC_val_U:	
   342  0071                     	ds	1
   343  0072                     _ADC_val:	
   344  0072                     	ds	1
   345  0073                     _counter:	
   346  0073                     	ds	1
   347  0074                     _sub_button:	
   348  0074                     	ds	1
   349  0075                     _add_button:	
   350  0075                     	ds	1
   351                           
   352                           	psect	dataCOMMON
   353  007C                     __pdataCOMMON:	
   354  007C                     _MenSig:	
   355  007C                     	ds	1
   356                           
   357                           	psect	cstackCOMMON
   358  0076                     __pcstackCOMMON:	
   359  0076                     ?_initPorts:	
   360  0076                     ?_initADCconv:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0076                     ?_ISR:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0076                     ??_ISR:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0076                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 1 bytes @ 0x0
   374  0076                     	ds	4
   375  007A                     ??_initPorts:	
   376  007A                     ??_initADCconv:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  007A                     ??_main:	
   380                           ; 1 bytes @ 0x4
   381                           
   382                           
   383                           ; 1 bytes @ 0x4
   384  007A                     	ds	2
   385                           
   386                           	psect	maintext
   387  007B                     __pmaintext:	
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 92 in file "Interrupciones_y_Librerias.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          2       0       0       0       0
   410 ;;      Totals:         2       0       0       0       0
   411 ;;Total ram usage:        2 bytes
   412 ;; Hardware stack levels required when called:    2
   413 ;; This function calls:
   414 ;;		_initADCconv
   415 ;;		_initPorts
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  007B                     _main:	
   424  007B                     l756:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;Interrupciones_y_Librerias.c: 93:     initPorts();
   430  007B  120A  118A  209C  120A  118A  	fcall	_initPorts
   431                           
   432                           ;Interrupciones_y_Librerias.c: 94:     initADCconv();
   433  0080  120A  118A  20BA  120A  118A  	fcall	_initADCconv
   434  0085                     l758:	
   435                           
   436                           ;Interrupciones_y_Librerias.c: 97:         _delay((unsigned long)((90)*(8000000/4000.0))
      +                          );
   437  0085  30EA               	movlw	234
   438  0086  00FB               	movwf	??_main+1
   439  0087  30C3               	movlw	195
   440  0088  00FA               	movwf	??_main
   441  0089                     u137:	
   442  0089  0BFA               	decfsz	??_main,f
   443  008A  2889               	goto	u137
   444  008B  0BFB               	decfsz	??_main+1,f
   445  008C  2889               	goto	u137
   446  008D                     l760:	
   447                           
   448                           ;Interrupciones_y_Librerias.c: 98:         PORTD = counter;
   449  008D  0873               	movf	_counter,w
   450  008E  1283               	bcf	3,5	;RP0=0, select bank0
   451  008F  1303               	bcf	3,6	;RP1=0, select bank0
   452  0090  0088               	movwf	8	;volatile
   453  0091                     l762:	
   454                           
   455                           ;Interrupciones_y_Librerias.c: 99:         if(counter == ADC_val){
   456  0091  0873               	movf	_counter,w
   457  0092  0672               	xorwf	_ADC_val,w
   458  0093  1D03               	skipz
   459  0094  2896               	goto	u121
   460  0095  2897               	goto	u120
   461  0096                     u121:	
   462  0096  2885               	goto	l758
   463  0097                     u120:	
   464  0097                     l764:	
   465                           
   466                           ;Interrupciones_y_Librerias.c: 100:             PORTAbits.RA1 = 1;
   467  0097  1485               	bsf	5,1	;volatile
   468  0098  2885               	goto	l758
   469  0099  120A  118A  280C   	ljmp	start
   470  009C                     __end_of_main:	
   471                           
   472                           	psect	text1
   473  009C                     __ptext1:	
   474 ;; *************** function _initPorts *****************
   475 ;; Defined at:
   476 ;;		line 109 in file "Interrupciones_y_Librerias.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       0       0       0       0
   494 ;;Total ram usage:        0 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    1
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _initPorts
   506  009C                     _initPorts:	
   507  009C                     l684:	
   508                           ;incstack = 0
   509                           ; Regs used in _initPorts: [wreg+status,2]
   510                           
   511                           
   512                           ;Interrupciones_y_Librerias.c: 110:     TRISA = 0x00;
   513  009C  1683               	bsf	3,5	;RP0=1, select bank1
   514  009D  1303               	bcf	3,6	;RP1=0, select bank1
   515  009E  0185               	clrf	5	;volatile
   516  009F                     l686:	
   517                           
   518                           ;Interrupciones_y_Librerias.c: 111:     TRISB = 0xFF;
   519  009F  30FF               	movlw	255
   520  00A0  0086               	movwf	6	;volatile
   521  00A1                     l688:	
   522                           
   523                           ;Interrupciones_y_Librerias.c: 112:     TRISC = 0x00;
   524  00A1  0187               	clrf	7	;volatile
   525  00A2                     l690:	
   526                           
   527                           ;Interrupciones_y_Librerias.c: 113:     TRISD = 0x00;
   528  00A2  0188               	clrf	8	;volatile
   529  00A3                     l692:	
   530                           
   531                           ;Interrupciones_y_Librerias.c: 114:     TRISE = 0x00;
   532  00A3  0189               	clrf	9	;volatile
   533  00A4                     l694:	
   534                           
   535                           ;Interrupciones_y_Librerias.c: 115:     ANSEL = 0x00;
   536  00A4  1683               	bsf	3,5	;RP0=1, select bank3
   537  00A5  1703               	bsf	3,6	;RP1=1, select bank3
   538  00A6  0188               	clrf	8	;volatile
   539  00A7                     l696:	
   540                           
   541                           ;Interrupciones_y_Librerias.c: 116:     ANSELH = 0x20;
   542  00A7  3020               	movlw	32
   543  00A8  0089               	movwf	9	;volatile
   544  00A9                     l698:	
   545                           
   546                           ;Interrupciones_y_Librerias.c: 117:     OSCCON = 0X77;
   547  00A9  3077               	movlw	119
   548  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   549  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   550  00AC  008F               	movwf	15	;volatile
   551  00AD                     l700:	
   552                           
   553                           ;Interrupciones_y_Librerias.c: 118:     INTCON = 0xE8;
   554  00AD  30E8               	movlw	232
   555  00AE  008B               	movwf	11	;volatile
   556  00AF                     l702:	
   557                           
   558                           ;Interrupciones_y_Librerias.c: 119:     IOCB = 0x03;
   559  00AF  3003               	movlw	3
   560  00B0  0096               	movwf	22	;volatile
   561  00B1                     l704:	
   562                           
   563                           ;Interrupciones_y_Librerias.c: 120:     TMR0 = 156;
   564  00B1  309C               	movlw	156
   565  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   566  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   567  00B4  0081               	movwf	1	;volatile
   568  00B5                     l706:	
   569                           
   570                           ;Interrupciones_y_Librerias.c: 121:     OPTION_REG = 0x81;
   571  00B5  3081               	movlw	129
   572  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   573  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   574  00B8  0081               	movwf	1	;volatile
   575  00B9                     l83:	
   576  00B9  0008               	return
   577  00BA                     __end_of_initPorts:	
   578                           
   579                           	psect	text2
   580  00BA                     __ptext2:	
   581 ;; *************** function _initADCconv *****************
   582 ;; Defined at:
   583 ;;		line 12 in file "ADCInterrupt.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _initADCconv
   613  00BA                     _initADCconv:	
   614  00BA                     l708:	
   615                           ;incstack = 0
   616                           ; Regs used in _initADCconv: [wreg+status,2]
   617                           
   618                           
   619                           ;ADCInterrupt.c: 13:     ADCON0 = 0xB7;
   620  00BA  30B7               	movlw	183
   621  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   622  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   623  00BD  009F               	movwf	31	;volatile
   624  00BE                     l710:	
   625                           
   626                           ;ADCInterrupt.c: 14:     ADCON1 = 0x00;
   627  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   628  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   629  00C0  019F               	clrf	31	;volatile
   630  00C1                     l712:	
   631                           
   632                           ;ADCInterrupt.c: 15:     PIE1 = 0x40;
   633  00C1  3040               	movlw	64
   634  00C2  008C               	movwf	12	;volatile
   635  00C3                     l92:	
   636  00C3  0008               	return
   637  00C4                     __end_of_initADCconv:	
   638                           
   639                           	psect	text3
   640  001F                     __ptext3:	
   641 ;; *************** function _ISR *****************
   642 ;; Defined at:
   643 ;;		line 54 in file "Interrupciones_y_Librerias.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          4       0       0       0       0
   660 ;;      Totals:         4       0       0       0       0
   661 ;;Total ram usage:        4 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		Interrupt level 1
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _ISR
   672  001F                     _ISR:	
   673  001F                     i1l714:	
   674                           
   675                           ;Interrupciones_y_Librerias.c: 56:     if (INTCONbits.RBIF == 1){
   676  001F  1C0B               	btfss	11,0	;volatile
   677  0020  2822               	goto	u1_21
   678  0021  2823               	goto	u1_20
   679  0022                     u1_21:	
   680  0022  284D               	goto	i1l740
   681  0023                     u1_20:	
   682  0023                     i1l716:	
   683                           
   684                           ;Interrupciones_y_Librerias.c: 57:        if (PORTBbits.RB1 == 1){
   685  0023  1283               	bcf	3,5	;RP0=0, select bank0
   686  0024  1303               	bcf	3,6	;RP1=0, select bank0
   687  0025  1C86               	btfss	6,1	;volatile
   688  0026  2828               	goto	u2_21
   689  0027  2829               	goto	u2_20
   690  0028                     u2_21:	
   691  0028  282C               	goto	i1l720
   692  0029                     u2_20:	
   693  0029                     i1l718:	
   694                           
   695                           ;Interrupciones_y_Librerias.c: 58:             add_button=1;
   696  0029  01F5               	clrf	_add_button
   697  002A  0AF5               	incf	_add_button,f
   698                           
   699                           ;Interrupciones_y_Librerias.c: 59:             INTCONbits.RBIF = 0;
   700  002B  100B               	bcf	11,0	;volatile
   701  002C                     i1l720:	
   702                           
   703                           ;Interrupciones_y_Librerias.c: 61:         if (add_button == 1 && PORTBbits.RB1 == 1){
   704  002C  0375               	decf	_add_button,w
   705  002D  1D03               	btfss	3,2
   706  002E  2830               	goto	u3_21
   707  002F  2831               	goto	u3_20
   708  0030                     u3_21:	
   709  0030  283A               	goto	i1l728
   710  0031                     u3_20:	
   711  0031                     i1l722:	
   712  0031  1C86               	btfss	6,1	;volatile
   713  0032  2834               	goto	u4_21
   714  0033  2835               	goto	u4_20
   715  0034                     u4_21:	
   716  0034  283A               	goto	i1l728
   717  0035                     u4_20:	
   718  0035                     i1l724:	
   719                           
   720                           ;Interrupciones_y_Librerias.c: 62:             counter++;
   721  0035  3001               	movlw	1
   722  0036  00F6               	movwf	??_ISR
   723  0037  0876               	movf	??_ISR,w
   724  0038  07F3               	addwf	_counter,f
   725  0039                     i1l726:	
   726                           
   727                           ;Interrupciones_y_Librerias.c: 63:             INTCONbits.RBIF = 0;
   728  0039  100B               	bcf	11,0	;volatile
   729  003A                     i1l728:	
   730                           
   731                           ;Interrupciones_y_Librerias.c: 65:         if (PORTBbits.RB2 == 1){
   732  003A  1D06               	btfss	6,2	;volatile
   733  003B  283D               	goto	u5_21
   734  003C  283E               	goto	u5_20
   735  003D                     u5_21:	
   736  003D  2841               	goto	i1l732
   737  003E                     u5_20:	
   738  003E                     i1l730:	
   739                           
   740                           ;Interrupciones_y_Librerias.c: 66:             sub_button=1;
   741  003E  01F4               	clrf	_sub_button
   742  003F  0AF4               	incf	_sub_button,f
   743                           
   744                           ;Interrupciones_y_Librerias.c: 67:             INTCONbits.RBIF = 0;
   745  0040  100B               	bcf	11,0	;volatile
   746  0041                     i1l732:	
   747                           
   748                           ;Interrupciones_y_Librerias.c: 69:         if (sub_button == 1 && PORTBbits.RB2 == 1){
   749  0041  0374               	decf	_sub_button,w
   750  0042  1D03               	btfss	3,2
   751  0043  2845               	goto	u6_21
   752  0044  2846               	goto	u6_20
   753  0045                     u6_21:	
   754  0045  284D               	goto	i1l740
   755  0046                     u6_20:	
   756  0046                     i1l734:	
   757  0046  1D06               	btfss	6,2	;volatile
   758  0047  2849               	goto	u7_21
   759  0048  284A               	goto	u7_20
   760  0049                     u7_21:	
   761  0049  284D               	goto	i1l740
   762  004A                     u7_20:	
   763  004A                     i1l736:	
   764                           
   765                           ;Interrupciones_y_Librerias.c: 70:             counter--;
   766  004A  3001               	movlw	1
   767  004B  02F3               	subwf	_counter,f
   768  004C                     i1l738:	
   769                           
   770                           ;Interrupciones_y_Librerias.c: 71:             INTCONbits.RBIF = 0;
   771  004C  100B               	bcf	11,0	;volatile
   772  004D                     i1l740:	
   773                           
   774                           ;Interrupciones_y_Librerias.c: 75:     if (PIR1bits.ADIF == 1){
   775  004D  1283               	bcf	3,5	;RP0=0, select bank0
   776  004E  1303               	bcf	3,6	;RP1=0, select bank0
   777  004F  1F0C               	btfss	12,6	;volatile
   778  0050  2852               	goto	u8_21
   779  0051  2853               	goto	u8_20
   780  0052                     u8_21:	
   781  0052  286D               	goto	i1l750
   782  0053                     u8_20:	
   783  0053                     i1l742:	
   784                           
   785                           ;Interrupciones_y_Librerias.c: 76:         PIR1bits.ADIF = 0;
   786  0053  130C               	bcf	12,6	;volatile
   787                           
   788                           ;Interrupciones_y_Librerias.c: 77:         if (ADCON0bits.GO_nDONE == 0){
   789  0054  189F               	btfsc	31,1	;volatile
   790  0055  2857               	goto	u9_21
   791  0056  2858               	goto	u9_20
   792  0057                     u9_21:	
   793  0057  286D               	goto	i1l750
   794  0058                     u9_20:	
   795  0058                     i1l744:	
   796                           
   797                           ;Interrupciones_y_Librerias.c: 78:             ADC_val = ADRESH;
   798  0058  081E               	movf	30,w	;volatile
   799  0059  00F6               	movwf	??_ISR
   800  005A  0876               	movf	??_ISR,w
   801  005B  00F2               	movwf	_ADC_val
   802  005C                     i1l746:	
   803                           
   804                           ;Interrupciones_y_Librerias.c: 79:             ADC_val_U = ADRESH & MenSig;
   805  005C  081E               	movf	30,w	;volatile
   806  005D  057C               	andwf	_MenSig,w
   807  005E  00F6               	movwf	??_ISR
   808  005F  0876               	movf	??_ISR,w
   809  0060  00F1               	movwf	_ADC_val_U
   810  0061                     i1l748:	
   811                           
   812                           ;Interrupciones_y_Librerias.c: 80:             ADC_val_D = ADRESH >> 4;
   813  0061  081E               	movf	30,w	;volatile
   814  0062  00F6               	movwf	??_ISR
   815  0063  3004               	movlw	4
   816  0064                     u10_25:	
   817  0064  1003               	clrc
   818  0065  0CF6               	rrf	??_ISR,f
   819  0066  3EFF               	addlw	-1
   820  0067  1D03               	skipz
   821  0068  2864               	goto	u10_25
   822  0069  0876               	movf	??_ISR,w
   823  006A  00F7               	movwf	??_ISR+1
   824  006B  0877               	movf	??_ISR+1,w
   825  006C  00F0               	movwf	_ADC_val_D
   826  006D                     i1l750:	
   827                           
   828                           ;Interrupciones_y_Librerias.c: 84:         if (INTCONbits.T0IF){
   829  006D  1D0B               	btfss	11,2	;volatile
   830  006E  2870               	goto	u11_21
   831  006F  2871               	goto	u11_20
   832  0070                     u11_21:	
   833  0070  2874               	goto	i1l71
   834  0071                     u11_20:	
   835  0071                     i1l752:	
   836                           
   837                           ;Interrupciones_y_Librerias.c: 85:         INTCONbits.T0IF = 0;
   838  0071  110B               	bcf	11,2	;volatile
   839  0072                     i1l754:	
   840                           
   841                           ;Interrupciones_y_Librerias.c: 86:         TMR0 = 156;
   842  0072  309C               	movlw	156
   843  0073  0081               	movwf	1	;volatile
   844  0074                     i1l71:	
   845  0074  0879               	movf	??_ISR+3,w
   846  0075  008A               	movwf	10
   847  0076  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
   848  0077  0083               	movwf	3
   849  0078  0EFE               	swapf	btemp,f
   850  0079  0E7E               	swapf	btemp,w
   851  007A  0009               	retfie
   852  007B                     __end_of_ISR:	
   853  007E                     btemp	set	126	;btemp
   854  007E                     wtemp0	set	126
   855                           
   856                           	psect	intentry
   857  0004                     __pintentry:	
   858                           ;incstack = 0
   859                           ; Regs used in _ISR: [wreg+status,2+status,0]
   860                           
   861  0004                     interrupt_function:	
   862  007E                     saved_w	set	btemp
   863  0004  00FE               	movwf	btemp
   864  0005  0E03               	swapf	3,w
   865  0006  00F8               	movwf	??_ISR+2
   866  0007  080A               	movf	10,w
   867  0008  00F9               	movwf	??_ISR+3
   868  0009  120A  118A  281F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                        _initADCconv
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADCconv                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADCconv
   _initPorts

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 00:18:31 2020

             __CFG_CP$OFF 0000                        l83 00B9                        l92 00C3  
                     l700 00AD                       l710 00BE                       l702 00AF  
                     l712 00C1                       l704 00B1                       l706 00B5  
                     l708 00BA                       l760 008D                       l690 00A2  
                     l762 0091                       l692 00A3                       l684 009C  
                     l764 0097                       l756 007B                       l694 00A4  
                     l686 009F                       l758 0085                       l696 00A7  
                     l688 00A1                       l698 00A9                       u120 0097  
                     u121 0096                       u137 0089              __CFG_CPD$OFF 0000  
                     _ISR 001F              ?_initADCconv 0076              __CFG_LVP$OFF 0000  
                    ?_ISR 0076                      _IOCB 0096                      _PIE1 008C  
                    i1l71 0074                      _TMR0 0001                      u1_20 0023  
                    u1_21 0022                      u2_20 0029                      u2_21 0028  
                    u3_20 0031                      u3_21 0030                      u4_20 0035  
                    u4_21 0034                      u5_20 003E                      u5_21 003D  
                    u6_20 0046                      u6_21 0045                      u7_20 004A  
                    u7_21 0049                      u8_20 0053                      u8_21 0052  
                    u9_20 0058                      u9_21 0057              __CFG_WRT$OFF 0000  
                    _main 007B                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_ISR 0076                     ?_main 0076  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l720 002C  
                   i1l730 003E                     i1l722 0031                     i1l714 001F  
                   i1l732 0041                     i1l724 0035                     i1l716 0023  
                   i1l740 004D                     i1l742 0053                     i1l750 006D  
                   i1l734 0046                     i1l726 0039                     i1l718 0029  
                   i1l752 0071                     i1l744 0058                     i1l736 004A  
                   i1l728 003A                     i1l754 0072                     i1l746 005C  
                   i1l738 004C                     i1l748 0061                     u10_25 0064  
                   u11_20 0071                     u11_21 0070                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 009C                    ??_main 007A                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ANSELH 0189  
                  _INTCON 000B                    _OSCCON 008F            __CFG_PWRTE$OFF 0000  
                  _MenSig 007C              __pdataCOMMON 007C                    saved_w 007E  
    __size_of_initADCconv 000A   __end_of__initialization 001B            __pcstackCOMMON 0076  
              _add_button 0075        __size_of_initPorts 001E                __pmaintext 007B  
              __pintentry 0004                   _ADC_val 0072                 _ADC_val_D 0070  
               _ADC_val_U 0071                   __ptext1 009C                   __ptext2 00BA  
                 __ptext3 001F              __size_of_ISR 005C                   _counter 0073  
       __end_of_initPorts 00BA      end_of_initialization 001B                 _PORTAbits 0005  
               _PORTBbits 0006                _sub_button 0074             __pidataCOMMON 00C4  
           ??_initADCconv 007A       start_initialization 000F               __end_of_ISR 007B  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070                 ___latbits 0002  
     __end_of_initADCconv 00C4                 _initPorts 009C         interrupt_function 0004  
                _PIR1bits 000C                _ADCON0bits 001F               _initADCconv 00BA  
              ?_initPorts 0076         __CFG_BOR4V$BOR40V 0000             __size_of_main 0021  
              _INTCONbits 000B               ??_initPorts 007A                  intlevel1 0000  
              _OPTION_REG 0081  
