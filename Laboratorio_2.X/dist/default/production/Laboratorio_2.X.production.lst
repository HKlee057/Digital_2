

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 00:26:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363                           
   364                           	psect	idataCOMMON
   365  00C9                     __pidataCOMMON:	
   366                           
   367                           ;initializer for _MenSig
   368  00C9  340F               	retlw	15
   369  001F                     _ADCON0	set	31
   370  000B                     _INTCON	set	11
   371  0005                     _PORTAbits	set	5
   372  0008                     _PORTD	set	8
   373  0001                     _TMR0	set	1
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  000C                     _PIR1bits	set	12
   377  0006                     _PORTBbits	set	6
   378  000B                     _INTCONbits	set	11
   379  008C                     _PIE1	set	140
   380  009F                     _ADCON1	set	159
   381  0081                     _OPTION_REG	set	129
   382  0096                     _IOCB	set	150
   383  008F                     _OSCCON	set	143
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           ; #config settings
   393  0000                     
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396  000F                     __initialization:	
   397                           
   398                           ; Initialize objects allocated to COMMON
   399  000F  120A  118A  20C9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   400  0014  00FC               	movwf	__pdataCOMMON& (0+127)
   401                           
   402                           ; Clear objects allocated to COMMON
   403  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   404  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   406  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   407  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   408  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   409  001B                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  001B                     __end_of__initialization:	
   413  001B  0183               	clrf	3
   414  001C  120A  118A  287B   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  0070                     __pbssCOMMON:	
   418  0070                     _ADC_val_D:	
   419  0070                     	ds	1
   420  0071                     _ADC_val_U:	
   421  0071                     	ds	1
   422  0072                     _ADC_val:	
   423  0072                     	ds	1
   424  0073                     _counter:	
   425  0073                     	ds	1
   426  0074                     _sub_button:	
   427  0074                     	ds	1
   428  0075                     _add_button:	
   429  0075                     	ds	1
   430                           
   431                           	psect	dataCOMMON
   432  007C                     __pdataCOMMON:	
   433  007C                     _MenSig:	
   434  007C                     	ds	1
   435                           
   436                           	psect	cstackCOMMON
   437  0076                     __pcstackCOMMON:	
   438  0076                     ?_initPorts:	
   439  0076                     ?_initADCconv:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0076                     ?_SegMultiplex:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0076                     ?_ISR:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0076                     ??_ISR:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0076                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 1 bytes @ 0x0
   456  0076                     	ds	4
   457  007A                     ??_initPorts:	
   458  007A                     ??_initADCconv:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  007A                     ??_SegMultiplex:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  007A                     ??_main:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 1 bytes @ 0x4
   469  007A                     	ds	2
   470                           
   471                           	psect	maintext
   472  007B                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 93 in file "Interrupciones_y_Librerias.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          2       0       0       0       0
   495 ;;      Totals:         2       0       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		_SegMultiplex
   500 ;;		_initADCconv
   501 ;;		_initPorts
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  007B                     _main:	
   510  007B                     l763:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;Interrupciones_y_Librerias.c: 94:     initPorts();
   516  007B  120A  118A  20A1  120A  118A  	fcall	_initPorts
   517                           
   518                           ;Interrupciones_y_Librerias.c: 95:     initADCconv();
   519  0080  120A  118A  20BF  120A  118A  	fcall	_initADCconv
   520  0085                     l765:	
   521                           
   522                           ;Interrupciones_y_Librerias.c: 96:     SegMultiplex();
   523  0085  120A  118A  20CA  120A  118A  	fcall	_SegMultiplex
   524  008A                     l78:	
   525                           ;Interrupciones_y_Librerias.c: 98:     while (1){
   526                           
   527                           
   528                           ;Interrupciones_y_Librerias.c: 99:         _delay((unsigned long)((90)*(8000000/4000.0))
      +                          );
   529  008A  30EA               	movlw	234
   530  008B  00FB               	movwf	??_main+1
   531  008C  30C3               	movlw	195
   532  008D  00FA               	movwf	??_main
   533  008E                     u137:	
   534  008E  0BFA               	decfsz	??_main,f
   535  008F  288E               	goto	u137
   536  0090  0BFB               	decfsz	??_main+1,f
   537  0091  288E               	goto	u137
   538                           
   539                           ;Interrupciones_y_Librerias.c: 100:         PORTD = counter;
   540  0092  0873               	movf	_counter,w
   541  0093  1283               	bcf	3,5	;RP0=0, select bank0
   542  0094  1303               	bcf	3,6	;RP1=0, select bank0
   543  0095  0088               	movwf	8	;volatile
   544                           
   545                           ;Interrupciones_y_Librerias.c: 101:         if(counter == ADC_val){
   546  0096  0873               	movf	_counter,w
   547  0097  0672               	xorwf	_ADC_val,w
   548  0098  1D03               	skipz
   549  0099  289B               	goto	u121
   550  009A  289C               	goto	u120
   551  009B                     u121:	
   552  009B  288A               	goto	l78
   553  009C                     u120:	
   554  009C                     l767:	
   555                           
   556                           ;Interrupciones_y_Librerias.c: 102:             PORTAbits.RA1 = 1;
   557  009C  1485               	bsf	5,1	;volatile
   558  009D  288A               	goto	l78
   559  009E  120A  118A  280C   	ljmp	start
   560  00A1                     __end_of_main:	
   561                           
   562                           	psect	text1
   563  00A1                     __ptext1:	
   564 ;; *************** function _initPorts *****************
   565 ;; Defined at:
   566 ;;		line 111 in file "Interrupciones_y_Librerias.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, status,2
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _initPorts
   596  00A1                     _initPorts:	
   597  00A1                     l689:	
   598                           ;incstack = 0
   599                           ; Regs used in _initPorts: [wreg+status,2]
   600                           
   601                           
   602                           ;Interrupciones_y_Librerias.c: 112:     TRISA = 0x00;
   603  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   604  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   605  00A3  0185               	clrf	5	;volatile
   606  00A4                     l691:	
   607                           
   608                           ;Interrupciones_y_Librerias.c: 113:     TRISB = 0xFF;
   609  00A4  30FF               	movlw	255
   610  00A5  0086               	movwf	6	;volatile
   611  00A6                     l693:	
   612                           
   613                           ;Interrupciones_y_Librerias.c: 114:     TRISC = 0x00;
   614  00A6  0187               	clrf	7	;volatile
   615  00A7                     l695:	
   616                           
   617                           ;Interrupciones_y_Librerias.c: 115:     TRISD = 0x00;
   618  00A7  0188               	clrf	8	;volatile
   619  00A8                     l697:	
   620                           
   621                           ;Interrupciones_y_Librerias.c: 116:     TRISE = 0x00;
   622  00A8  0189               	clrf	9	;volatile
   623  00A9                     l699:	
   624                           
   625                           ;Interrupciones_y_Librerias.c: 117:     ANSEL = 0x00;
   626  00A9  1683               	bsf	3,5	;RP0=1, select bank3
   627  00AA  1703               	bsf	3,6	;RP1=1, select bank3
   628  00AB  0188               	clrf	8	;volatile
   629  00AC                     l701:	
   630                           
   631                           ;Interrupciones_y_Librerias.c: 118:     ANSELH = 0x20;
   632  00AC  3020               	movlw	32
   633  00AD  0089               	movwf	9	;volatile
   634  00AE                     l703:	
   635                           
   636                           ;Interrupciones_y_Librerias.c: 119:     OSCCON = 0X77;
   637  00AE  3077               	movlw	119
   638  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   639  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   640  00B1  008F               	movwf	15	;volatile
   641  00B2                     l705:	
   642                           
   643                           ;Interrupciones_y_Librerias.c: 120:     INTCON = 0xE8;
   644  00B2  30E8               	movlw	232
   645  00B3  008B               	movwf	11	;volatile
   646  00B4                     l707:	
   647                           
   648                           ;Interrupciones_y_Librerias.c: 121:     IOCB = 0x03;
   649  00B4  3003               	movlw	3
   650  00B5  0096               	movwf	22	;volatile
   651  00B6                     l709:	
   652                           
   653                           ;Interrupciones_y_Librerias.c: 122:     TMR0 = 156;
   654  00B6  309C               	movlw	156
   655  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   656  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   657  00B9  0081               	movwf	1	;volatile
   658  00BA                     l711:	
   659                           
   660                           ;Interrupciones_y_Librerias.c: 123:     OPTION_REG = 0x81;
   661  00BA  3081               	movlw	129
   662  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   663  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   664  00BD  0081               	movwf	1	;volatile
   665  00BE                     l85:	
   666  00BE  0008               	return
   667  00BF                     __end_of_initPorts:	
   668                           
   669                           	psect	text2
   670  00BF                     __ptext2:	
   671 ;; *************** function _initADCconv *****************
   672 ;; Defined at:
   673 ;;		line 12 in file "ADCInterrupt.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _initADCconv
   703  00BF                     _initADCconv:	
   704  00BF                     l713:	
   705                           ;incstack = 0
   706                           ; Regs used in _initADCconv: [wreg+status,2]
   707                           
   708                           
   709                           ;ADCInterrupt.c: 13:     ADCON0 = 0xB7;
   710  00BF  30B7               	movlw	183
   711  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   712  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   713  00C2  009F               	movwf	31	;volatile
   714  00C3                     l715:	
   715                           
   716                           ;ADCInterrupt.c: 14:     ADCON1 = 0x00;
   717  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   718  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   719  00C5  019F               	clrf	31	;volatile
   720  00C6                     l717:	
   721                           
   722                           ;ADCInterrupt.c: 15:     PIE1 = 0x40;
   723  00C6  3040               	movlw	64
   724  00C7  008C               	movwf	12	;volatile
   725  00C8                     l94:	
   726  00C8  0008               	return
   727  00C9                     __end_of_initADCconv:	
   728                           
   729                           	psect	text3
   730  00CA                     __ptext3:	
   731 ;; *************** function _SegMultiplex *****************
   732 ;; Defined at:
   733 ;;		line 11 in file "7Segments_Multiplex.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		None
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _SegMultiplex
   763  00CA                     _SegMultiplex:	
   764  00CA                     l719:	
   765                           ;incstack = 0
   766                           ; Regs used in _SegMultiplex: []
   767                           
   768  00CA                     l97:	
   769  00CA  0008               	return
   770  00CB                     __end_of_SegMultiplex:	
   771                           
   772                           	psect	text4
   773  001F                     __ptext4:	
   774 ;; *************** function _ISR *****************
   775 ;; Defined at:
   776 ;;		line 55 in file "Interrupciones_y_Librerias.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          4       0       0       0       0
   793 ;;      Totals:         4       0       0       0       0
   794 ;;Total ram usage:        4 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		Interrupt level 1
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _ISR
   805  001F                     _ISR:	
   806  001F                     i1l721:	
   807                           
   808                           ;Interrupciones_y_Librerias.c: 57:     if (INTCONbits.RBIF == 1){
   809  001F  1C0B               	btfss	11,0	;volatile
   810  0020  2822               	goto	u1_21
   811  0021  2823               	goto	u1_20
   812  0022                     u1_21:	
   813  0022  284D               	goto	i1l747
   814  0023                     u1_20:	
   815  0023                     i1l723:	
   816                           
   817                           ;Interrupciones_y_Librerias.c: 58:        if (PORTBbits.RB1 == 1){
   818  0023  1283               	bcf	3,5	;RP0=0, select bank0
   819  0024  1303               	bcf	3,6	;RP1=0, select bank0
   820  0025  1C86               	btfss	6,1	;volatile
   821  0026  2828               	goto	u2_21
   822  0027  2829               	goto	u2_20
   823  0028                     u2_21:	
   824  0028  282C               	goto	i1l727
   825  0029                     u2_20:	
   826  0029                     i1l725:	
   827                           
   828                           ;Interrupciones_y_Librerias.c: 59:             add_button=1;
   829  0029  01F5               	clrf	_add_button
   830  002A  0AF5               	incf	_add_button,f
   831                           
   832                           ;Interrupciones_y_Librerias.c: 60:             INTCONbits.RBIF = 0;
   833  002B  100B               	bcf	11,0	;volatile
   834  002C                     i1l727:	
   835                           
   836                           ;Interrupciones_y_Librerias.c: 62:         if (add_button == 1 && PORTBbits.RB1 == 1){
   837  002C  0375               	decf	_add_button,w
   838  002D  1D03               	btfss	3,2
   839  002E  2830               	goto	u3_21
   840  002F  2831               	goto	u3_20
   841  0030                     u3_21:	
   842  0030  283A               	goto	i1l735
   843  0031                     u3_20:	
   844  0031                     i1l729:	
   845  0031  1C86               	btfss	6,1	;volatile
   846  0032  2834               	goto	u4_21
   847  0033  2835               	goto	u4_20
   848  0034                     u4_21:	
   849  0034  283A               	goto	i1l735
   850  0035                     u4_20:	
   851  0035                     i1l731:	
   852                           
   853                           ;Interrupciones_y_Librerias.c: 63:             counter++;
   854  0035  3001               	movlw	1
   855  0036  00F6               	movwf	??_ISR
   856  0037  0876               	movf	??_ISR,w
   857  0038  07F3               	addwf	_counter,f
   858  0039                     i1l733:	
   859                           
   860                           ;Interrupciones_y_Librerias.c: 64:             INTCONbits.RBIF = 0;
   861  0039  100B               	bcf	11,0	;volatile
   862  003A                     i1l735:	
   863                           
   864                           ;Interrupciones_y_Librerias.c: 66:         if (PORTBbits.RB2 == 1){
   865  003A  1D06               	btfss	6,2	;volatile
   866  003B  283D               	goto	u5_21
   867  003C  283E               	goto	u5_20
   868  003D                     u5_21:	
   869  003D  2841               	goto	i1l739
   870  003E                     u5_20:	
   871  003E                     i1l737:	
   872                           
   873                           ;Interrupciones_y_Librerias.c: 67:             sub_button=1;
   874  003E  01F4               	clrf	_sub_button
   875  003F  0AF4               	incf	_sub_button,f
   876                           
   877                           ;Interrupciones_y_Librerias.c: 68:             INTCONbits.RBIF = 0;
   878  0040  100B               	bcf	11,0	;volatile
   879  0041                     i1l739:	
   880                           
   881                           ;Interrupciones_y_Librerias.c: 70:         if (sub_button == 1 && PORTBbits.RB2 == 1){
   882  0041  0374               	decf	_sub_button,w
   883  0042  1D03               	btfss	3,2
   884  0043  2845               	goto	u6_21
   885  0044  2846               	goto	u6_20
   886  0045                     u6_21:	
   887  0045  284D               	goto	i1l747
   888  0046                     u6_20:	
   889  0046                     i1l741:	
   890  0046  1D06               	btfss	6,2	;volatile
   891  0047  2849               	goto	u7_21
   892  0048  284A               	goto	u7_20
   893  0049                     u7_21:	
   894  0049  284D               	goto	i1l747
   895  004A                     u7_20:	
   896  004A                     i1l743:	
   897                           
   898                           ;Interrupciones_y_Librerias.c: 71:             counter--;
   899  004A  3001               	movlw	1
   900  004B  02F3               	subwf	_counter,f
   901  004C                     i1l745:	
   902                           
   903                           ;Interrupciones_y_Librerias.c: 72:             INTCONbits.RBIF = 0;
   904  004C  100B               	bcf	11,0	;volatile
   905  004D                     i1l747:	
   906                           
   907                           ;Interrupciones_y_Librerias.c: 76:     if (PIR1bits.ADIF == 1){
   908  004D  1283               	bcf	3,5	;RP0=0, select bank0
   909  004E  1303               	bcf	3,6	;RP1=0, select bank0
   910  004F  1F0C               	btfss	12,6	;volatile
   911  0050  2852               	goto	u8_21
   912  0051  2853               	goto	u8_20
   913  0052                     u8_21:	
   914  0052  286D               	goto	i1l757
   915  0053                     u8_20:	
   916  0053                     i1l749:	
   917                           
   918                           ;Interrupciones_y_Librerias.c: 77:         PIR1bits.ADIF = 0;
   919  0053  130C               	bcf	12,6	;volatile
   920                           
   921                           ;Interrupciones_y_Librerias.c: 78:         if (ADCON0bits.GO_nDONE == 0){
   922  0054  189F               	btfsc	31,1	;volatile
   923  0055  2857               	goto	u9_21
   924  0056  2858               	goto	u9_20
   925  0057                     u9_21:	
   926  0057  286D               	goto	i1l757
   927  0058                     u9_20:	
   928  0058                     i1l751:	
   929                           
   930                           ;Interrupciones_y_Librerias.c: 79:             ADC_val = ADRESH;
   931  0058  081E               	movf	30,w	;volatile
   932  0059  00F6               	movwf	??_ISR
   933  005A  0876               	movf	??_ISR,w
   934  005B  00F2               	movwf	_ADC_val
   935  005C                     i1l753:	
   936                           
   937                           ;Interrupciones_y_Librerias.c: 80:             ADC_val_U = ADRESH & MenSig;
   938  005C  081E               	movf	30,w	;volatile
   939  005D  057C               	andwf	_MenSig,w
   940  005E  00F6               	movwf	??_ISR
   941  005F  0876               	movf	??_ISR,w
   942  0060  00F1               	movwf	_ADC_val_U
   943  0061                     i1l755:	
   944                           
   945                           ;Interrupciones_y_Librerias.c: 81:             ADC_val_D = ADRESH >> 4;
   946  0061  081E               	movf	30,w	;volatile
   947  0062  00F6               	movwf	??_ISR
   948  0063  3004               	movlw	4
   949  0064                     u10_25:	
   950  0064  1003               	clrc
   951  0065  0CF6               	rrf	??_ISR,f
   952  0066  3EFF               	addlw	-1
   953  0067  1D03               	skipz
   954  0068  2864               	goto	u10_25
   955  0069  0876               	movf	??_ISR,w
   956  006A  00F7               	movwf	??_ISR+1
   957  006B  0877               	movf	??_ISR+1,w
   958  006C  00F0               	movwf	_ADC_val_D
   959  006D                     i1l757:	
   960                           
   961                           ;Interrupciones_y_Librerias.c: 85:         if (INTCONbits.T0IF){
   962  006D  1D0B               	btfss	11,2	;volatile
   963  006E  2870               	goto	u11_21
   964  006F  2871               	goto	u11_20
   965  0070                     u11_21:	
   966  0070  2874               	goto	i1l73
   967  0071                     u11_20:	
   968  0071                     i1l759:	
   969                           
   970                           ;Interrupciones_y_Librerias.c: 86:         INTCONbits.T0IF = 0;
   971  0071  110B               	bcf	11,2	;volatile
   972  0072                     i1l761:	
   973                           
   974                           ;Interrupciones_y_Librerias.c: 87:         TMR0 = 156;
   975  0072  309C               	movlw	156
   976  0073  0081               	movwf	1	;volatile
   977  0074                     i1l73:	
   978  0074  0879               	movf	??_ISR+3,w
   979  0075  008A               	movwf	10
   980  0076  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
   981  0077  0083               	movwf	3
   982  0078  0EFE               	swapf	btemp,f
   983  0079  0E7E               	swapf	btemp,w
   984  007A  0009               	retfie
   985  007B                     __end_of_ISR:	
   986  007E                     btemp	set	126	;btemp
   987  007E                     wtemp0	set	126
   988                           
   989                           	psect	intentry
   990  0004                     __pintentry:	
   991                           ;incstack = 0
   992                           ; Regs used in _ISR: [wreg+status,2+status,0]
   993                           
   994  0004                     interrupt_function:	
   995  007E                     saved_w	set	btemp
   996  0004  00FE               	movwf	btemp
   997  0005  0E03               	swapf	3,w
   998  0006  00F8               	movwf	??_ISR+2
   999  0007  080A               	movf	10,w
  1000  0008  00F9               	movwf	??_ISR+3
  1001  0009  120A  118A  281F   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                       _SegMultiplex
                        _initADCconv
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADCconv                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SegMultiplex                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SegMultiplex
   _initADCconv
   _initPorts

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 00:26:58 2020

             __CFG_CP$OFF 0000                        l85 00BE                        l94 00C8  
                      l78 008A                        l97 00CA                       l701 00AC  
                     l711 00BA                       l703 00AE                       l713 00BF  
                     l705 00B2                       l715 00C3                       l707 00B4  
                     l717 00C6                       l709 00B6                       l719 00CA  
                     l691 00A4                       l763 007B                       l693 00A6  
                     l765 0085                       l695 00A7                       l767 009C  
                     l697 00A8                       l689 00A1                       l699 00A9  
                     u120 009C                       u121 009B                       u137 008E  
            __CFG_CPD$OFF 0000                       _ISR 001F              ?_initADCconv 0076  
            __CFG_LVP$OFF 0000                      ?_ISR 0076                      _IOCB 0096  
                    _PIE1 008C                      i1l73 0074                      _TMR0 0001  
                    u1_20 0023                      u1_21 0022                      u2_20 0029  
                    u2_21 0028                      u3_20 0031                      u3_21 0030  
                    u4_20 0035                      u4_21 0034                      u5_20 003E  
                    u5_21 003D                      u6_20 0046                      u6_21 0045  
                    u7_20 004A                      u7_21 0049                      u8_20 0053  
                    u8_21 0052                      u9_20 0058                      u9_21 0057  
            __CFG_WRT$OFF 0000                      _main 007B                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0076  
                   ?_main 0076             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l721 001F                     i1l731 0035                     i1l723 0023  
                   i1l741 0046                     i1l733 0039                     i1l725 0029  
                   i1l751 0058                     i1l743 004A                     i1l735 003A  
                   i1l727 002C                     i1l761 0072                     i1l753 005C  
                   i1l745 004C                     i1l737 003E                     i1l729 0031  
                   i1l755 0061                     i1l739 0041                     i1l747 004D  
                   i1l749 0053                     i1l757 006D                     i1l759 0071  
                   u10_25 0064                     u11_20 0071                     u11_21 0070  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00A1                    ??_main 007A  
           ?_SegMultiplex 0076                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ANSELH 0189                    _INTCON 000B  
                  _OSCCON 008F            __CFG_PWRTE$OFF 0000                    _MenSig 007C  
          ??_SegMultiplex 007A              __pdataCOMMON 007C                    saved_w 007E  
    __size_of_initADCconv 000A   __end_of__initialization 001B            __pcstackCOMMON 0076  
              _add_button 0075        __size_of_initPorts 001E                __pmaintext 007B  
              __pintentry 0004                   _ADC_val 0072      __end_of_SegMultiplex 00CB  
               _ADC_val_D 0070                 _ADC_val_U 0071                   __ptext1 00A1  
                 __ptext2 00BF                   __ptext3 00CA                   __ptext4 001F  
            __size_of_ISR 005C                   _counter 0073         __end_of_initPorts 00BF  
    end_of_initialization 001B                 _PORTAbits 0005                 _PORTBbits 0006  
              _sub_button 0074             __pidataCOMMON 00C9             ??_initADCconv 007A  
     start_initialization 000F               __end_of_ISR 007B     __size_of_SegMultiplex 0001  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070              _SegMultiplex 00CA  
               ___latbits 0002       __end_of_initADCconv 00C9                 _initPorts 00A1  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
             _initADCconv 00BF                ?_initPorts 0076         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0026                _INTCONbits 000B               ??_initPorts 007A  
                intlevel1 0000                _OPTION_REG 0081  
