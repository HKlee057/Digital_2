

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 23:37:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  001F                     _ADCON0	set	31
   283  000B                     _INTCON	set	11
   284  0008                     _PORTD	set	8
   285  001E                     _ADRESH	set	30
   286  001F                     _ADCON0bits	set	31
   287  000C                     _PIR1bits	set	12
   288  0006                     _PORTBbits	set	6
   289  000B                     _INTCONbits	set	11
   290  008C                     _PIE1	set	140
   291  009F                     _ADCON1	set	159
   292  0096                     _IOCB	set	150
   293  008F                     _OSCCON	set	143
   294  0089                     _TRISE	set	137
   295  0088                     _TRISD	set	136
   296  0087                     _TRISC	set	135
   297  0086                     _TRISB	set	134
   298  0085                     _TRISA	set	133
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306  000F                     __initialization:	
   307                           
   308                           ; Clear objects allocated to COMMON
   309  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   310  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   311  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   312  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   313  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   314  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   315  0015                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0015                     __end_of__initialization:	
   319  0015  0183               	clrf	3
   320  0016  120A  118A  286D   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0070                     __pbssCOMMON:	
   324  0070                     _ADC_val_D:	
   325  0070                     	ds	1
   326  0071                     _ADC_val_U:	
   327  0071                     	ds	1
   328  0072                     _ADC_val:	
   329  0072                     	ds	1
   330  0073                     _counter:	
   331  0073                     	ds	1
   332  0074                     _sub_button:	
   333  0074                     	ds	1
   334  0075                     _add_button:	
   335  0075                     	ds	1
   336                           
   337                           	psect	cstackCOMMON
   338  0076                     __pcstackCOMMON:	
   339  0076                     ?_initPorts:	
   340  0076                     ?_initADCconv:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_ISR:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0076                     ??_ISR:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0076                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0076                     	ds	4
   355  007A                     ??_initPorts:	
   356  007A                     ??_initADCconv:	
   357                           ; 1 bytes @ 0x4
   358                           
   359  007A                     ??_main:	
   360                           ; 1 bytes @ 0x4
   361                           
   362                           
   363                           ; 1 bytes @ 0x4
   364  007A                     	ds	2
   365                           
   366                           	psect	maintext
   367  006D                     __pmaintext:	
   368 ;;
   369 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   370 ;;
   371 ;; *************** function _main *****************
   372 ;; Defined at:
   373 ;;		line 86 in file "Interrupciones_y_Librerias.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B00/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0
   390 ;;      Totals:         2       0       0       0       0
   391 ;;Total ram usage:        2 bytes
   392 ;; Hardware stack levels required when called:    2
   393 ;; This function calls:
   394 ;;		_initADCconv
   395 ;;		_initPorts
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  006D                     _main:	
   404  006D                     l734:	
   405                           ;incstack = 0
   406                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   407                           
   408                           
   409                           ;Interrupciones_y_Librerias.c: 87:     initPorts();
   410  006D  120A  118A  2087  120A  118A  	fcall	_initPorts
   411                           
   412                           ;Interrupciones_y_Librerias.c: 88:     initADCconv();
   413  0072  120A  118A  209D  120A  118A  	fcall	_initADCconv
   414  0077                     l736:	
   415                           
   416                           ;Interrupciones_y_Librerias.c: 91:         _delay((unsigned long)((90)*(8000000/4000.0))
      +                          );
   417  0077  30EA               	movlw	234
   418  0078  00FB               	movwf	??_main+1
   419  0079  30C3               	movlw	195
   420  007A  00FA               	movwf	??_main
   421  007B                     u117:	
   422  007B  0BFA               	decfsz	??_main,f
   423  007C  287B               	goto	u117
   424  007D  0BFB               	decfsz	??_main+1,f
   425  007E  287B               	goto	u117
   426  007F                     l738:	
   427                           
   428                           ;Interrupciones_y_Librerias.c: 92:         PORTD = counter;
   429  007F  0873               	movf	_counter,w
   430  0080  1283               	bcf	3,5	;RP0=0, select bank0
   431  0081  1303               	bcf	3,6	;RP1=0, select bank0
   432  0082  0088               	movwf	8	;volatile
   433  0083  2877               	goto	l736
   434  0084  120A  118A  280C   	ljmp	start
   435  0087                     __end_of_main:	
   436                           
   437                           	psect	text1
   438  0087                     __ptext1:	
   439 ;; *************** function _initPorts *****************
   440 ;; Defined at:
   441 ;;		line 100 in file "Interrupciones_y_Librerias.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _initPorts
   471  0087                     _initPorts:	
   472  0087                     l674:	
   473                           ;incstack = 0
   474                           ; Regs used in _initPorts: [wreg+status,2]
   475                           
   476                           
   477                           ;Interrupciones_y_Librerias.c: 101:     TRISA = 0x00;
   478  0087  1683               	bsf	3,5	;RP0=1, select bank1
   479  0088  1303               	bcf	3,6	;RP1=0, select bank1
   480  0089  0185               	clrf	5	;volatile
   481  008A                     l676:	
   482                           
   483                           ;Interrupciones_y_Librerias.c: 102:     TRISB = 0xFF;
   484  008A  30FF               	movlw	255
   485  008B  0086               	movwf	6	;volatile
   486  008C                     l678:	
   487                           
   488                           ;Interrupciones_y_Librerias.c: 103:     TRISC = 0x00;
   489  008C  0187               	clrf	7	;volatile
   490  008D                     l680:	
   491                           
   492                           ;Interrupciones_y_Librerias.c: 104:     TRISD = 0x00;
   493  008D  0188               	clrf	8	;volatile
   494  008E                     l682:	
   495                           
   496                           ;Interrupciones_y_Librerias.c: 105:     TRISE = 0x00;
   497  008E  0189               	clrf	9	;volatile
   498  008F                     l684:	
   499                           
   500                           ;Interrupciones_y_Librerias.c: 106:     ANSEL = 0x00;
   501  008F  1683               	bsf	3,5	;RP0=1, select bank3
   502  0090  1703               	bsf	3,6	;RP1=1, select bank3
   503  0091  0188               	clrf	8	;volatile
   504  0092                     l686:	
   505                           
   506                           ;Interrupciones_y_Librerias.c: 107:     ANSELH = 0x20;
   507  0092  3020               	movlw	32
   508  0093  0089               	movwf	9	;volatile
   509  0094                     l688:	
   510                           
   511                           ;Interrupciones_y_Librerias.c: 108:     OSCCON = 0X77;
   512  0094  3077               	movlw	119
   513  0095  1683               	bsf	3,5	;RP0=1, select bank1
   514  0096  1303               	bcf	3,6	;RP1=0, select bank1
   515  0097  008F               	movwf	15	;volatile
   516  0098                     l690:	
   517                           
   518                           ;Interrupciones_y_Librerias.c: 109:     INTCON = 0xE8;
   519  0098  30E8               	movlw	232
   520  0099  008B               	movwf	11	;volatile
   521  009A                     l692:	
   522                           
   523                           ;Interrupciones_y_Librerias.c: 110:     IOCB = 0x03;
   524  009A  3003               	movlw	3
   525  009B  0096               	movwf	22	;volatile
   526  009C                     l73:	
   527  009C  0008               	return
   528  009D                     __end_of_initPorts:	
   529                           
   530                           	psect	text2
   531  009D                     __ptext2:	
   532 ;; *************** function _initADCconv *****************
   533 ;; Defined at:
   534 ;;		line 12 in file "ADCInterrupt.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _initADCconv
   564  009D                     _initADCconv:	
   565  009D                     l694:	
   566                           ;incstack = 0
   567                           ; Regs used in _initADCconv: [wreg+status,2]
   568                           
   569                           
   570                           ;ADCInterrupt.c: 13:     ADCON0 = 0xB7;
   571  009D  30B7               	movlw	183
   572  009E  1283               	bcf	3,5	;RP0=0, select bank0
   573  009F  1303               	bcf	3,6	;RP1=0, select bank0
   574  00A0  009F               	movwf	31	;volatile
   575  00A1                     l696:	
   576                           
   577                           ;ADCInterrupt.c: 14:     ADCON1 = 0x00;
   578  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   579  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   580  00A3  019F               	clrf	31	;volatile
   581  00A4                     l698:	
   582                           
   583                           ;ADCInterrupt.c: 15:     PIE1 = 0x40;
   584  00A4  3040               	movlw	64
   585  00A5  008C               	movwf	12	;volatile
   586  00A6                     l82:	
   587  00A6  0008               	return
   588  00A7                     __end_of_initADCconv:	
   589                           
   590                           	psect	text3
   591  0019                     __ptext3:	
   592 ;; *************** function _ISR *****************
   593 ;; Defined at:
   594 ;;		line 53 in file "Interrupciones_y_Librerias.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          4       0       0       0       0
   611 ;;      Totals:         4       0       0       0       0
   612 ;;Total ram usage:        4 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		Interrupt level 1
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _ISR
   623  0019                     _ISR:	
   624  0019                     i1l700:	
   625                           
   626                           ;Interrupciones_y_Librerias.c: 55:     if (INTCONbits.RBIF == 1){
   627  0019  1C0B               	btfss	11,0	;volatile
   628  001A  281C               	goto	u1_21
   629  001B  281D               	goto	u1_20
   630  001C                     u1_21:	
   631  001C  2847               	goto	i1l726
   632  001D                     u1_20:	
   633  001D                     i1l702:	
   634                           
   635                           ;Interrupciones_y_Librerias.c: 56:        if (PORTBbits.RB1 == 1){
   636  001D  1283               	bcf	3,5	;RP0=0, select bank0
   637  001E  1303               	bcf	3,6	;RP1=0, select bank0
   638  001F  1C86               	btfss	6,1	;volatile
   639  0020  2822               	goto	u2_21
   640  0021  2823               	goto	u2_20
   641  0022                     u2_21:	
   642  0022  2826               	goto	i1l706
   643  0023                     u2_20:	
   644  0023                     i1l704:	
   645                           
   646                           ;Interrupciones_y_Librerias.c: 57:             add_button=1;
   647  0023  01F5               	clrf	_add_button
   648  0024  0AF5               	incf	_add_button,f
   649                           
   650                           ;Interrupciones_y_Librerias.c: 58:             INTCONbits.RBIF = 0;
   651  0025  100B               	bcf	11,0	;volatile
   652  0026                     i1l706:	
   653                           
   654                           ;Interrupciones_y_Librerias.c: 60:         if (add_button == 1 && PORTBbits.RB1 == 1){
   655  0026  0375               	decf	_add_button,w
   656  0027  1D03               	btfss	3,2
   657  0028  282A               	goto	u3_21
   658  0029  282B               	goto	u3_20
   659  002A                     u3_21:	
   660  002A  2834               	goto	i1l714
   661  002B                     u3_20:	
   662  002B                     i1l708:	
   663  002B  1C86               	btfss	6,1	;volatile
   664  002C  282E               	goto	u4_21
   665  002D  282F               	goto	u4_20
   666  002E                     u4_21:	
   667  002E  2834               	goto	i1l714
   668  002F                     u4_20:	
   669  002F                     i1l710:	
   670                           
   671                           ;Interrupciones_y_Librerias.c: 61:             counter++;
   672  002F  3001               	movlw	1
   673  0030  00F6               	movwf	??_ISR
   674  0031  0876               	movf	??_ISR,w
   675  0032  07F3               	addwf	_counter,f
   676  0033                     i1l712:	
   677                           
   678                           ;Interrupciones_y_Librerias.c: 62:             INTCONbits.RBIF = 0;
   679  0033  100B               	bcf	11,0	;volatile
   680  0034                     i1l714:	
   681                           
   682                           ;Interrupciones_y_Librerias.c: 64:         if (PORTBbits.RB2 == 1){
   683  0034  1D06               	btfss	6,2	;volatile
   684  0035  2837               	goto	u5_21
   685  0036  2838               	goto	u5_20
   686  0037                     u5_21:	
   687  0037  283B               	goto	i1l718
   688  0038                     u5_20:	
   689  0038                     i1l716:	
   690                           
   691                           ;Interrupciones_y_Librerias.c: 65:             sub_button=1;
   692  0038  01F4               	clrf	_sub_button
   693  0039  0AF4               	incf	_sub_button,f
   694                           
   695                           ;Interrupciones_y_Librerias.c: 66:             INTCONbits.RBIF = 0;
   696  003A  100B               	bcf	11,0	;volatile
   697  003B                     i1l718:	
   698                           
   699                           ;Interrupciones_y_Librerias.c: 68:         if (sub_button == 1 && PORTBbits.RB2 == 1){
   700  003B  0374               	decf	_sub_button,w
   701  003C  1D03               	btfss	3,2
   702  003D  283F               	goto	u6_21
   703  003E  2840               	goto	u6_20
   704  003F                     u6_21:	
   705  003F  2847               	goto	i1l726
   706  0040                     u6_20:	
   707  0040                     i1l720:	
   708  0040  1D06               	btfss	6,2	;volatile
   709  0041  2843               	goto	u7_21
   710  0042  2844               	goto	u7_20
   711  0043                     u7_21:	
   712  0043  2847               	goto	i1l726
   713  0044                     u7_20:	
   714  0044                     i1l722:	
   715                           
   716                           ;Interrupciones_y_Librerias.c: 69:             counter--;
   717  0044  3001               	movlw	1
   718  0045  02F3               	subwf	_counter,f
   719  0046                     i1l724:	
   720                           
   721                           ;Interrupciones_y_Librerias.c: 70:             INTCONbits.RBIF = 0;
   722  0046  100B               	bcf	11,0	;volatile
   723  0047                     i1l726:	
   724                           
   725                           ;Interrupciones_y_Librerias.c: 74:     if (PIR1bits.ADIF == 1){
   726  0047  1283               	bcf	3,5	;RP0=0, select bank0
   727  0048  1303               	bcf	3,6	;RP1=0, select bank0
   728  0049  1F0C               	btfss	12,6	;volatile
   729  004A  284C               	goto	u8_21
   730  004B  284D               	goto	u8_20
   731  004C                     u8_21:	
   732  004C  2866               	goto	i1l62
   733  004D                     u8_20:	
   734  004D                     i1l728:	
   735                           
   736                           ;Interrupciones_y_Librerias.c: 75:         PIR1bits.ADIF = 0;
   737  004D  130C               	bcf	12,6	;volatile
   738                           
   739                           ;Interrupciones_y_Librerias.c: 76:         if (ADCON0bits.GO_nDONE == 0){
   740  004E  189F               	btfsc	31,1	;volatile
   741  004F  2851               	goto	u9_21
   742  0050  2852               	goto	u9_20
   743  0051                     u9_21:	
   744  0051  2866               	goto	i1l62
   745  0052                     u9_20:	
   746  0052                     i1l730:	
   747                           
   748                           ;Interrupciones_y_Librerias.c: 77:             ADC_val = ADRESH;
   749  0052  081E               	movf	30,w	;volatile
   750  0053  00F6               	movwf	??_ISR
   751  0054  0876               	movf	??_ISR,w
   752  0055  00F2               	movwf	_ADC_val
   753                           
   754                           ;Interrupciones_y_Librerias.c: 78:             ADC_val_U = ADRESH;
   755  0056  081E               	movf	30,w	;volatile
   756  0057  00F6               	movwf	??_ISR
   757  0058  0876               	movf	??_ISR,w
   758  0059  00F1               	movwf	_ADC_val_U
   759  005A                     i1l732:	
   760                           
   761                           ;Interrupciones_y_Librerias.c: 79:             ADC_val_D = ADRESH >> 4;
   762  005A  081E               	movf	30,w	;volatile
   763  005B  00F6               	movwf	??_ISR
   764  005C  3004               	movlw	4
   765  005D                     u10_25:	
   766  005D  1003               	clrc
   767  005E  0CF6               	rrf	??_ISR,f
   768  005F  3EFF               	addlw	-1
   769  0060  1D03               	skipz
   770  0061  285D               	goto	u10_25
   771  0062  0876               	movf	??_ISR,w
   772  0063  00F7               	movwf	??_ISR+1
   773  0064  0877               	movf	??_ISR+1,w
   774  0065  00F0               	movwf	_ADC_val_D
   775  0066                     i1l62:	
   776  0066  0879               	movf	??_ISR+3,w
   777  0067  008A               	movwf	10
   778  0068  0E78               	swapf	(??_ISR+2)^(0+4294967168),w
   779  0069  0083               	movwf	3
   780  006A  0EFE               	swapf	btemp,f
   781  006B  0E7E               	swapf	btemp,w
   782  006C  0009               	retfie
   783  006D                     __end_of_ISR:	
   784  007E                     btemp	set	126	;btemp
   785  007E                     wtemp0	set	126
   786                           
   787                           	psect	intentry
   788  0004                     __pintentry:	
   789                           ;incstack = 0
   790                           ; Regs used in _ISR: [wreg+status,2+status,0]
   791                           
   792  0004                     interrupt_function:	
   793  007E                     saved_w	set	btemp
   794  0004  00FE               	movwf	btemp
   795  0005  0E03               	swapf	3,w
   796  0006  00F8               	movwf	??_ISR+2
   797  0007  080A               	movf	10,w
   798  0008  00F9               	movwf	??_ISR+3
   799  0009  120A  118A  2819   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMMON     2     2      0
                        _initADCconv
                          _initPorts
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADCconv                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initADCconv
   _initPorts

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 23:37:14 2020

             __CFG_CP$OFF 0000                        l73 009C                        l82 00A6  
                     l734 006D                       l680 008D                       l736 0077  
                     l690 0098                       l682 008E                       l674 0087  
                     l738 007F                       l692 009A                       l684 008F  
                     l676 008A                       l694 009D                       l686 0092  
                     l678 008C                       l696 00A1                       l688 0094  
                     l698 00A4                       u117 007B              __CFG_CPD$OFF 0000  
                     _ISR 0019              ?_initADCconv 0076              __CFG_LVP$OFF 0000  
                    ?_ISR 0076                      _IOCB 0096                      _PIE1 008C  
                    i1l62 0066                      u1_20 001D                      u1_21 001C  
                    u2_20 0023                      u2_21 0022                      u3_20 002B  
                    u3_21 002A                      u4_20 002F                      u4_21 002E  
                    u5_20 0038                      u5_21 0037                      u6_20 0040  
                    u6_21 003F                      u7_20 0044                      u7_21 0043  
                    u8_20 004D                      u8_21 004C                      u9_20 0052  
                    u9_21 0051              __CFG_WRT$OFF 0000                      _main 006D  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0076                     ?_main 0076             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l700 0019                     i1l710 002F  
                   i1l702 001D                     i1l720 0040                     i1l712 0033  
                   i1l704 0023                     i1l730 0052                     i1l722 0044  
                   i1l714 0034                     i1l706 0026                     i1l732 005A  
                   i1l724 0046                     i1l716 0038                     i1l708 002B  
                   i1l718 003B                     i1l726 0047                     i1l728 004D  
                   u10_25 005D                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0087  
                  ??_main 007A                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ANSELH 0189                    _INTCON 000B  
                  _OSCCON 008F            __CFG_PWRTE$OFF 0000                    saved_w 007E  
    __size_of_initADCconv 000A   __end_of__initialization 0015            __pcstackCOMMON 0076  
              _add_button 0075        __size_of_initPorts 0016                __pmaintext 006D  
              __pintentry 0004                   _ADC_val 0072                 _ADC_val_D 0070  
               _ADC_val_U 0071                   __ptext1 0087                   __ptext2 009D  
                 __ptext3 0019              __size_of_ISR 0054                   _counter 0073  
       __end_of_initPorts 009D      end_of_initialization 0015                 _PORTBbits 0006  
              _sub_button 0074             ??_initADCconv 007A       start_initialization 000F  
             __end_of_ISR 006D  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0070  
               ___latbits 0002       __end_of_initADCconv 00A7                 _initPorts 0087  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
             _initADCconv 009D                ?_initPorts 0076         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 001A                _INTCONbits 000B               ??_initPorts 007A  
                intlevel1 0000  
